{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMUWrSZf/oK9XrOSoEOOHt7",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/shibajhope/TI03_Shiba-Raihanah_0110223091/blob/main/Tugas%20Mandiri%201%20Data%20Mining\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "f_NGd4h-cURh",
        "outputId": "73b12344-7385-4f7f-b95b-a41ef5090dcd"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Seluruh Data:\n",
            "     Gender  Height  Weight  Index\n",
            "0      Male     174      96      4\n",
            "1      Male     189      87      2\n",
            "2    Female     185     110      4\n",
            "3    Female     195     104      3\n",
            "4      Male     149      61      3\n",
            "..      ...     ...     ...    ...\n",
            "495  Female     150     153      5\n",
            "496  Female     184     121      4\n",
            "497  Female     141     136      5\n",
            "498    Male     150      95      5\n",
            "499    Male     173     131      5\n",
            "\n",
            "[500 rows x 4 columns]\n",
            "\n",
            "\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "\n",
        "df = pd.read_csv('/content/500_Person_Gender_Height_Weight_Index.csv')\n",
        "print(\"Seluruh Data:\")\n",
        "print(df)\n",
        "print(\"\\n\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "stats = df.groupby('Gender').agg({\n",
        "    'Weight': ['count', 'mean', 'max', 'min'],\n",
        "    'Height': ['count', 'mean', 'max', 'min']\n",
        "})\n",
        "print(\"Statistik berdasarkan Gender:\")\n",
        "print(stats)\n",
        "print(\"\\n\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YHVdyISAcmBM",
        "outputId": "2746f64b-2afe-47c7-94cd-36af50bfce43"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Statistik berdasarkan Gender:\n",
            "       Weight                      Height                      \n",
            "        count        mean  max min  count        mean  max  min\n",
            "Gender                                                         \n",
            "Female    255  105.698039  160  50    255  170.227451  199  140\n",
            "Male      245  106.314286  160  50    245  169.648980  199  140\n",
            "\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Gender_Binary'] = df['Gender'].map({'Female': 0, 'Male': 1})\n",
        "print(df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7f_P0UKCctEj",
        "outputId": "85507a2c-ac71-43b0-b7a0-36840fc9dc92"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     Gender  Height  Weight  Index  Gender_Binary\n",
            "0      Male     174      96      4              1\n",
            "1      Male     189      87      2              1\n",
            "2    Female     185     110      4              0\n",
            "3    Female     195     104      3              0\n",
            "4      Male     149      61      3              1\n",
            "..      ...     ...     ...    ...            ...\n",
            "495  Female     150     153      5              0\n",
            "496  Female     184     121      4              0\n",
            "497  Female     141     136      5              0\n",
            "498    Male     150      95      5              1\n",
            "499    Male     173     131      5              1\n",
            "\n",
            "[500 rows x 5 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Gender_Binary'] = df['Gender'].map({'Female': 0, 'Male': 1})\n",
        "\n",
        "plt.figure(figsize=(10, 6))\n",
        "for gender in df['Gender'].unique():\n",
        "    subset = df[df['Gender'] == gender]\n",
        "    plt.hist(subset['Index'], bins=6, alpha=0.5, label=gender)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 522
        },
        "id": "709FcSLSdYUx",
        "outputId": "9f65637b-c389-4b5b-ce99-0236bd50c2b1"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}